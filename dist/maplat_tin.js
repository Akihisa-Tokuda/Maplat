/**
 * maplat_tin - JavaScript library which performs bijective conversion mutually between the coordinate systems of two planes based on the control points.
 * @version v0.3.2
 * @link https://github.com/code4nara/Maplat#readme
 * @license MIT
 * Copyright (c) 2015- Kohei Otsuka, Code for Nara, RekishiKokudo project
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
("function"==typeof turf?function(t){this.Tin=t(this.turf,this.mapshaper)}:"function"==typeof define&&define.amd?function(r){define(["turf","mapshaper"],function(t,e){return r(t,e)})}:"undefined"!=typeof module&&module.exports&&"function"==typeof require?function(t){var e,r;try{e=require("@turf/turf"),r=require("mapshaper")}catch(t){}module.exports=t(e,r)}:function(t){if(!this.turf)throw new Error('"turf" not found');this.Tin=t(this.turf,this.mapshaper)})(function(g,t){g.point||(Object.keys(g.helpers).map(function(t){g[t]=g.helpers[t]}),Object.keys(g.invariant).map(function(t){g[t]=g.invariant[t]})),g.booleanClockwise;var f=t.internal,l=function(t){t.bounds?this.setBounds(t.bounds):(this.setWh(t.wh),this.vertexMode=t.vertexMode||l.VERTEX_PLAIN),this.strictMode=t.strictMode||l.MODE_AUTO,this.yaxisMode=t.yaxisMode||l.YAXIS_INVERT,t.points&&this.setPoints(t.points)};function c(t){for(var e=t.features,r=0;r<e.length;r++){var o=e[r];"bbox"==(o.properties.a.index+"").substring(0,4)&&"bbox"==(o.properties.b.index+"").substring(0,4)?e[r]={geometry:{type:"Polygon",coordinates:[[o.geometry.coordinates[0][2],o.geometry.coordinates[0][0],o.geometry.coordinates[0][1],o.geometry.coordinates[0][2]]]},properties:{a:{geom:o.properties.c.geom,index:o.properties.c.index},b:{geom:o.properties.a.geom,index:o.properties.a.index},c:{geom:o.properties.b.geom,index:o.properties.b.index}},type:"Feature"}:"bbox"==(o.properties.c.index+"").substring(0,4)&&"bbox"==(o.properties.a.index+"").substring(0,4)&&(e[r]={geometry:{type:"Polygon",coordinates:[[o.geometry.coordinates[0][1],o.geometry.coordinates[0][2],o.geometry.coordinates[0][0],o.geometry.coordinates[0][1]]]},properties:{a:{geom:o.properties.b.geom,index:o.properties.b.index},b:{geom:o.properties.c.geom,index:o.properties.c.index},c:{geom:o.properties.a.geom,index:o.properties.a.index}},type:"Feature"})}return t}function p(u,f){var c=f.geometry.coordinates;return[0,1,2,3].map(function(t){var e=(t+1)%4,r=u[t],o=u[e],n=r.geometry.coordinates,i=Math.atan2(n[0]-c[0],n[1]-c[1]),s=[f,r,o,f].map(function(t){return t.geometry.coordinates}),a={a:{geom:f.properties.target.geom,index:f.properties.target.index},b:{geom:r.properties.target.geom,index:r.properties.target.index},c:{geom:o.properties.target.geom,index:o.properties.target.index}};return[i,g.featureCollection([g.polygon([s],a)])]}).reduce(function(t,e){return t[0].push(e[0]),t[1].push(e[1]),t},[[],[]])}function u(t,e){for(var r=e?function(t){return!(0<=t&&t<2*Math.PI)}:function(t){return!(t>-1*Math.PI&&t<=Math.PI)};r(t);)t+=2*Math.PI*(0<t?-1:1);return t}function m(t,e,r){return g.point(t,{target:{geom:e,index:r}})}function k(t){return g.point(t.properties.target.geom,{target:{geom:t.geometry.coordinates,index:t.properties.target.index}})}function a(t,e,r){var o=e.geometry.coordinates[0][0],n=e.geometry.coordinates[0][1],i=e.geometry.coordinates[0][2],s=t.geometry.coordinates,a=e.properties.a.geom,u=e.properties.b.geom,f=e.properties.c.geom,c=[n[0]-o[0],n[1]-o[1]],p=[i[0]-o[0],i[1]-o[1]],h=[s[0]-o[0],s[1]-o[1]],w=[u[0]-a[0],u[1]-a[1]],b=[f[0]-a[0],f[1]-a[1]],d=(p[1]*h[0]-p[0]*h[1])/(c[0]*p[1]-c[1]*p[0]),g=(c[0]*h[1]-c[1]*h[0])/(c[0]*p[1]-c[1]*p[0]);if(r){var m,l=r[e.properties.a.index],k=r[e.properties.b.index],v=r[e.properties.c.index];if(d<0||g<0||1-d-g<0){var y=d/(d+g),_=g/(d+g);m=d/k/(y/k+_/v),g=g/v/(y/k+_/v)}else m=d/k/(d/k+g/v+(1-d-g)/l),g=g/v/(d/k+g/v+(1-d-g)/l);d=m}return[d*w[0]+g*b[0]+a[0],d*w[1]+g*b[1]+a[1]]}function s(t,e,r,o){var n=t.geometry.coordinates,i=r.geometry.coordinates,s=function(t,e){for(var r,o=u(t-e[0]),n=2*Math.PI,i=0;i<e.length;i++){var s=u(t-e[(i+1)%e.length]),a=Math.min(Math.abs(o),Math.abs(s));o*s<=0&&a<n&&(n=a,r=i),o=s}return r}(Math.atan2(n[0]-i[0],n[1]-i[1]),e[0]);return a(t,e[1][s].features[0],o)}function v(t,e,r,o,n){var i=function(t,e){for(var r=0;r<e.features.length;r++)if(g.booleanPointInPolygon(t,e.features[r]))return e.features[r]}(t,e);return i?a(t,i,n):s(t,r,o,n)}function h(e){var t=["a","b","c","a"].map(function(t){return e.properties[t].geom}),r=e.geometry.coordinates[0],o=e.properties,n={a:{geom:r[0],index:o.a.index},b:{geom:r[1],index:o.b.index},c:{geom:r[2],index:o.c.index}};return g.polygon([t],n)}function o(t,r,o,n,i){var e,s,a;return r=t.map(function(t){var e=isFinite(t)?r[t]:"cent"==t?o:"bbox0"==t?n[0]:"bbox1"==t?n[1]:"bbox2"==t?n[2]:n[3];return i?[[e[1],e[0]],t]:[[e[0],e[1]],t]}),e=r,s=[0,1,2,0].map(function(t){return e[t][0][0]}),a={a:{geom:e[0][0][1],index:e[0][1]},b:{geom:e[1][0][1],index:e[1][1]},c:{geom:e[2][0][1],index:e[2][1]}},g.polygon([s],a)}function w(t,e,r){var o=d(e.forw),n=d(e.bakw);if(JSON.stringify(o)!=JSON.stringify(n))throw JSON.stringify(e,null,2)+"\n"+JSON.stringify(o)+"\n"+JSON.stringify(n);for(var i=0;i<o.length;i++){var s=o[i];t[s]||(t[s]=[]),t[s].push(e)}r&&(r.forw.features.push(e.forw),r.bakw.features.push(e.bakw))}function b(t,e,r){var o=d(e.forw),n=d(e.bakw);if(JSON.stringify(o)!=JSON.stringify(n))throw JSON.stringify(e,null,2)+"\n"+JSON.stringify(o)+"\n"+JSON.stringify(n);for(var i=0;i<o.length;i++){var s=o[i];0==(a=t[s].filter(function(t){return t.forw!=e.forw})).length?delete t[s]:t[s]=a}if(r){var a=r.forw.features.filter(function(t){return t!=e.forw});r.forw.features=a,a=r.bakw.features.filter(function(t){return t!=e.bakw}),r.bakw.features=a}}function d(e){var r=["a","b","c"].map(function(t){return e.properties[t].index});return[[0,1],[0,2],[1,2],[0,1,2]].map(function(t){return t.map(function(t){return r[t]}).sort().join("-")}).sort()}return l.VERTEX_PLAIN="plain",l.VERTEX_BIRDEYE="birdeye",l.MODE_STRICT="strict",l.MODE_AUTO="auto",l.MODE_LOOSE="loose",l.STATUS_STRICT="strict",l.STATUS_ERROR="strict_error",l.STATUS_LOOSE="loose",l.YAXIS_FOLLOW="follow",l.YAXIS_INVERT="invert",l.setTurf=function(t){g=t},l.prototype.setPoints=function(t){this.yaxisMode==l.YAXIS_FOLLOW&&(t=t.map(function(t){return[t[0],[t[1][0],-1*t[1][1]]]})),this.points=t,this.tins=void 0},l.prototype.setBounds=function(t){var e,r,o,n,i;this.bounds=t;for(var s=0;s<t.length;s++){var a=t[s];0==s?(e=o=a[0],r=n=a[1],i=[a]):(a[0]<e&&(e=a[0]),a[0]>o&&(o=a[0]),a[1]<r&&(r=a[1]),a[1]>n&&(n=a[1]),i.push(a))}i.push(t[0]),this.boundsPolygon=g.polygon([i]),this.xy=[e,r],this.wh=[o-e,n-r],this.vertexMode=l.VERTEX_PLAIN,this.tins=void 0},l.prototype.setCompiled=function(r){if(!r.tins&&r.points&&r.tins_points){this.points=r.points,this.pointsWeightBuffer=r.weight_buffer,r.strict_status?this.strict_status=r.strict_status:r.kinks_points?this.strict_status=l.STATUS_ERROR:2==r.tins_points.length?this.strict_status=l.STATUS_LOOSE:this.strict_status=l.STATUS_STRICT,this.vertices_params={forw:[r.vertices_params[0]],bakw:[r.vertices_params[1]]},this.vertices_params.forw[1]=[0,1,2,3].map(function(t){var e=o(["cent","bbox"+t,"bbox"+(t+1)%4],r.points,r.centroid_point,r.vertices_points,!1);return g.featureCollection([e])}),this.vertices_params.bakw[1]=[0,1,2,3].map(function(t){var e=o(["cent","bbox"+t,"bbox"+(t+1)%4],r.points,r.centroid_point,r.vertices_points,!0);return g.featureCollection([e])}),this.centroid={forw:g.point(r.centroid_point[0],{target:{geom:r.centroid_point[1],index:"cent"}}),bakw:g.point(r.centroid_point[1],{target:{geom:r.centroid_point[0],index:"cent"}})};var t=1==r.tins_points.length?0:1;this.tins={forw:g.featureCollection(r.tins_points[0].map(function(t){return o(t,r.points,r.centroid_point,r.vertices_points,!1)})),bakw:g.featureCollection(r.tins_points[t].map(function(t){return o(t,r.points,r.centroid_point,r.vertices_points,!0)}))},r.kinks_points&&(this.kinks={bakw:g.featureCollection(r.kinks_points.map(function(t){return g.point(t)}))}),r.yaxisMode?this.yaxisMode=r.yaxisMode:this.yaxisMode=l.YAXIS_INVERT,r.bounds?(this.bounds=r.bounds,this.boundsPolygon=r.boundsPolygon,this.xy=r.xy,this.wh=r.wh):(this.xy=[0,0],r.xy&&(this.wh=r.wh),this.bounds=void 0,this.boundsPolygon=void 0)}else{this.tins=r.tins,this.strict_status=r.strict_status,this.pointsWeightBuffer=r.weight_buffer,this.vertices_params=r.vertices_params,this.centroid=r.centroid,this.kinks=r.kinks;for(var i=[],e=0;e<this.tins.forw.features.length;e++){var s=this.tins.forw.features[e];["a","b","c"].map(function(t,e){var r=s.geometry.coordinates[0][e],o=s.properties[t].geom,n=s.properties[t].index;i[n]=[r,o]})}this.points=i}return{tins:this.tins,strict_status:this.strict_status,weight_buffer:this.pointsWeightBuffer,vertices_params:this.vertices_params,centroid:this.centroid,kinks:this.kinks}},l.prototype.getCompiled=function(){var n={};n.points=this.points,n.weight_buffer=this.pointsWeightBuffer,n.centroid_point=[this.centroid.forw.geometry.coordinates,this.centroid.forw.properties.target.geom],n.vertices_params=[this.vertices_params.forw[0],this.vertices_params.bakw[0]],n.vertices_points=[];var i=this.vertices_params.forw[1];return[0,1,2,3].map(function(t){var e=i[t].features[0],r=e.geometry.coordinates[0][1],o=e.properties.b.geom;n.vertices_points[t]=[r,o]}),n.strict_status=this.strict_status,n.tins_points=[[]],this.tins.forw.features.map(function(e){n.tins_points[0].push(["a","b","c"].map(function(t){return e.properties[t].index}))}),this.strict_status==l.STATUS_LOOSE?(n.tins_points[1]=[],this.tins.bakw.features.map(function(e){n.tins_points[1].push(["a","b","c"].map(function(t){return e.properties[t].index}))})):this.strict_status==l.STATUS_ERROR&&(n.kinks_points=this.kinks.bakw.features.map(function(t){return t.geometry.coordinates})),this.yaxisMode==l.YAXIS_FOLLOW&&(n.yaxisMode=l.YAXIS_FOLLOW),this.bounds&&(n.bounds=this.bounds,n.boundsPolygon=this.boundsPolygon,n.xy=this.xy),n.wh=this.wh,n},l.prototype.setWh=function(t){this.wh=t,this.xy=[0,0],this.bounds=void 0,this.boundsPolygon=void 0,this.tins=void 0},l.prototype.setVertexMode=function(t){this.vertexMode=t,this.tins=void 0},l.prototype.setStrictMode=function(t){this.strictMode=t,this.tins=void 0},l.prototype.calcurateStrictTinAsync=function(){var u=this;return Promise.all(u.tins.forw.features.map(function(t){return Promise.resolve(h(t))})).then(function(t){u.tins.bakw=g.featureCollection(t)}).then(function(){var o={};return Promise.all(u.tins.forw.features.map(function(t,e){var r=u.tins.bakw.features[e];return Promise.resolve(w(o,{forw:t,bakw:r}))})).then(function(){return o}).catch(function(t){throw t})}).then(function(t){return[(e=t,r={forw:{},bakw:{}},Promise.all(Object.keys(e).map(function(t){return new Promise(function(r){var o=e[t];if(o.length<2)return r();["forw","bakw"].map(function(t){var e=g.intersect(o[0][t],o[1][t]);if(!e||"Point"==e.geometry.type||"LineString"==e.geometry.type)return r();g.difference(o[0][t],e),g.difference(o[1][t],e),r()})})})).then(function(){return 0==Object.keys(r.forw).length&&delete r.forw,0==Object.keys(r.bakw).length&&delete r.bakw,r}).catch(function(t){throw t})),t];var e,r}).then(function(t){var s=t[0],a=t[1];return s.bakw&&Object.keys(s.bakw).map(function(t){if("Not include case"!=s.bakw[t]){var o=a[t],e=g.union(o[0].forw,o[1].forw),r=g.convex(g.featureCollection([o[0].forw,o[1].forw]));if(!g.difference(r,e)){var n=t.split("-").map(function(e){return["a","b","c"].map(function(t,e){var r=o[0].bakw.properties[t];return{geom:o[0].bakw.geometry.coordinates[0][e],prop:r}}).filter(function(t){return t.prop.index==e})[0]}),i=o.map(function(o){return["a","b","c"].map(function(t,e){var r=o.bakw.properties[t];return{geom:o.bakw.geometry.coordinates[0][e],prop:r}}).filter(function(t){return t.prop.index!=n[0].prop.index&&t.prop.index!=n[1].prop.index})[0]});b(a,o[0],u.tins),b(a,o[1],u.tins),n.map(function(t){var e=[t.geom,i[0].geom,i[1].geom,t.geom],r={a:t.prop,b:i[0].prop,c:i[1].prop},o=g.polygon([e],r),n=h(o);w(a,{forw:n,bakw:o},u.tins)})}}}),Promise.all(["forw","bakw"].map(function(i){return new Promise(function(t){var e,r,o=u.tins[i].features.map(function(t){return t.geometry.coordinates[0]}),n=(e=o,r=new f.ArcCollection(e),f.findSegmentIntersections(r));t(f.dedupIntersections(n).reduce(function(e,t,r,o){return e||(e={}),e[t.x+":"+t.y]=t,r!=o.length-1?e:Object.keys(e).map(function(t){return g.point([e[t].x,e[t].y])})},[]))}).catch(function(t){throw t})})).then(function(t){0==t[0].length&&0==t[1].length?(u.strict_status=l.STATUS_STRICT,delete u.kinks):(u.strict_status=l.STATUS_ERROR,u.kinks={},0<t[0].length&&(u.kinks.forw=g.featureCollection(t[0])),0<t[1].length&&(u.kinks.bakw=g.featureCollection(t[1])))}).catch(function(t){throw t})}).catch(function(t){throw t})},l.prototype.updateTinAsync=function(){var u=this,a=this.strictMode,h=u.xy[0]-.05*u.wh[0],w=u.xy[0]+1.05*u.wh[0],b=u.xy[1]-.05*u.wh[1],d=u.xy[1]+1.05*u.wh[1];return new Promise(function(t,e){a!=l.MODE_STRICT&&a!=l.MODE_LOOSE&&(a=l.MODE_AUTO);var r=[];u.wh&&(r=[[h,b],[w,b],[h,d],[w,d]]);for(var o={forw:[],bakw:[]},n=0;n<u.points.length;n++){var i=m(u.points[n][0],u.points[n][1],n);o.forw.push(i),o.bakw.push(k(i))}t([{forw:g.featureCollection(o.forw),bakw:g.featureCollection(o.bakw)},r])}).then(function(t){var e=t[0];return Promise.all([new Promise(function(t){t(g.tin(e.forw,"target"))}),new Promise(function(t){t(g.tin(e.bakw,"target"))}),new Promise(function(t){t(g.centroid(e.forw))}),Promise.resolve(t)]).catch(function(t){throw t})}).then(function(t){var o=t[0],n=t[1],e=t[2],r=t[3],i=r[0];if(0==o.features.length||0==n.features.length)throw"TOO LINEAR1";var s={forw:e.geometry.coordinates};s.bakw=v(e,o),u.centroid={forw:m(s.forw,s.bakw,"cent")},u.centroid.bakw=k(u.centroid.forw);var a={};return Promise.all([new Promise(function(t){var e,r=g.convex(i.forw).geometry.coordinates[0];try{e=r.map(function(t){return{forw:t,bakw:v(g.point(t),o)}})}catch(t){throw"TOO LINEAR2"}e.map(function(t){a[t.forw[0]+":"+t.forw[1]]=t}),t()}),new Promise(function(t){var e,r=g.convex(i.bakw).geometry.coordinates[0];try{e=r.map(function(t){return{bakw:t,forw:v(g.point(t),n)}})}catch(t){throw"TOO LINEAR2"}e.map(function(t){a[t.forw[0]+":"+t.forw[1]]=t}),t()})]).then(function(){return[s,a,r]}).catch(function(t){throw t})}).then(function(t){var c=t[0],p=t[1],e=t[2],r=Object.keys(p).reduce(function(t,e,r,o){var n=p[e].forw,i=p[e].bakw,s={forw:[n[0]-c.forw[0],n[1]-c.forw[1]]};s.bakw=[i[0]-c.bakw[0],i[1]-c.bakw[1]];var a=0==s.forw[0]?1/0:((s.forw[0]<0?h:w)-c.forw[0])/s.forw[0],u=0==s.forw[1]?1/0:((s.forw[1]<0?b:d)-c.forw[1])/s.forw[1];if(Math.abs(a)/Math.abs(u)<1.1){var f={forw:[s.forw[0]*a+c.forw[0],s.forw[1]*a+c.forw[1]],bakw:[s.bakw[0]*a+c.bakw[0],s.bakw[1]*a+c.bakw[1]]};s.forw[0]<0?t[3].push(f):t[1].push(f)}return Math.abs(u)/Math.abs(a)<1.1&&(f={forw:[s.forw[0]*u+c.forw[0],s.forw[1]*u+c.forw[1]],bakw:[s.bakw[0]*u+c.bakw[0],s.bakw[1]*u+c.bakw[1]]},s.forw[1]<0?t[0].push(f):t[2].push(f)),t},[[],[],[],[]]),o=Object.keys(p).reduce(function(t,e,r,o){var n=p[e].forw,i=p[e].bakw,s={forw:[n[0]-c.forw[0],n[1]-c.forw[1]]};if(s.bakw=[i[0]-c.bakw[0],c.bakw[1]-i[1]],0==s.forw[0]||0==s.forw[1])return t;var a=0;return 0<s.forw[0]&&(a+=1),0<s.forw[1]&&(a+=2),t[a].push([s.forw,s.bakw]),r==o.length-1?t.length==t.filter(function(t){return 0<t.length}).length&&u.vertexMode==l.VERTEX_BIRDEYE?t:t.reduce(function(t,e){return[t[0].concat(e)]},[[]]):t},[[],[],[],[]]).map(function(t){return t.reduce(function(t,e,r,o){t||(t=[1/0,0,0]);var n=Math.sqrt(Math.pow(e[0][0],2)+Math.pow(e[0][1],2))/Math.sqrt(Math.pow(e[1][0],2)+Math.pow(e[1][1],2));n=n<t[0]?n:t[0];var i=Math.atan2(e[0][0],e[0][1])-Math.atan2(e[1][0],e[1][1]),s=t[1]+Math.cos(i),a=t[2]+Math.sin(i);return r==o.length-1?[n,Math.atan2(a,s)]:[n,s,a]},null)});return 1==o.length&&(o=[o[0],o[0],o[0],o[0]]),[o,c,r,e]}).then(function(t){var e=t[0],s=t[1],r=t[2],o=t[3][0],a=t[3][1],n=e.map(function(t,e){var r=a[e],o=[r[0]-s.forw[0],r[1]-s.forw[1]],n=Math.sqrt(Math.pow(o[0],2)+Math.pow(o[1],2))/t[0],i=Math.atan2(o[0],o[1])-t[1];return{forw:r,bakw:[s.bakw[0]+n*Math.sin(i),s.bakw[1]-n*Math.cos(i)]}}),i=n[2];n[2]=n[3],n[3]=i;for(var u=[1,1,1,1],f=0;f<4;f++){var c=(f+1)%4,p=g.lineString([n[f].bakw,n[c].bakw]);r[f].map(function(t){var e=g.lineString([s.bakw,t.bakw]);if(0<(r=g.lineIntersect(p,e)).features.length&&r.features[0].geometry){var r=r.features[0],o=Math.sqrt(Math.pow(t.bakw[0]-s.bakw[0],2)+Math.pow(t.bakw[1]-s.bakw[1],2))/Math.sqrt(Math.pow(r.geometry.coordinates[0]-s.bakw[0],2)+Math.pow(r.geometry.coordinates[1]-s.bakw[1],2));o>u[f]&&(u[f]=o),o>u[c]&&(u[c]=o)}})}return[n=n.map(function(t,e){var r=u[e],o=[(t.bakw[0]-s.bakw[0])*r+s.bakw[0],(t.bakw[1]-s.bakw[1])*r+s.bakw[1]];return{forw:t.forw,bakw:o}}),o]}).then(function(t){for(var e=t[0],r=t[1],o={forw:[],bakw:[]},n=0;n<e.length;n++){var i=m(e[n].forw,e[n].bakw,"bbox"+n),s=k(i);r.forw.features.push(i),r.bakw.features.push(s),o.forw.push(i),o.bakw.push(s)}return u.pointsSet=r,u.tins={forw:c(g.tin(r.forw,"target"))},(a==l.MODE_STRICT||a==l.MODE_AUTO?u.calcurateStrictTinAsync():Promise.resolve()).then(function(){return(a==l.MODE_LOOSE||a==l.MODE_AUTO&&u.strict_status==l.STATUS_ERROR)&&(u.tins.bakw=c(g.tin(r.bakw,"target")),delete u.kinks,u.strict_status=l.STATUS_LOOSE),u.vertices_params={forw:p(o.forw,u.centroid.forw),bakw:p(o.bakw,u.centroid.bakw)},u.calculatePointsWeightAsync()}).catch(function(t){throw t})}).catch(function(t){throw t})},l.prototype.transform=function(t,e,r){this.yaxisMode==l.YAXIS_FOLLOW&&e&&(t=[t[0],-1*t[1]]);var o=g.point(t);if(this.bounds&&!e&&!r&&!g.booleanPointInPolygon(o,this.boundsPolygon))return!1;var n=v(o,e?this.tins.bakw:this.tins.forw,e?this.vertices_params.bakw:this.vertices_params.forw,e?this.centroid.bakw:this.centroid.forw,e?this.pointsWeightBuffer.bakw:this.pointsWeightBuffer.forw);if(this.bounds&&e&&!r){var i=g.point(n);if(!g.booleanPointInPolygon(i,this.boundsPolygon))return!1}else this.yaxisMode!=l.YAXIS_FOLLOW||e||(n=[n[0],-1*n[1]]);return n},l.prototype.calculatePointsWeightAsync=function(){var e=this,t=["forw"];e.strict_status==l.STATUS_LOOSE&&t.push("bakw");var m={};return Promise.all(t.map(function(d){m[d]={};var g={},t=e.tins[d];return Promise.all(t.features.map(function(w){var b=["a","b","c"];return new Promise(function(t){for(var e=0;e<3;e++){var r=(e+1)%3,o=b[e],n=b[r],i=w.properties[o].index,s=w.properties[n].index,a=[i,s].sort().join("-");if(!g[a]){var u=w.geometry.coordinates[0][e],f=w.geometry.coordinates[0][r],c=w.properties[o].geom,p=w.properties[n].geom;g[a]=1;var h=Math.sqrt(Math.pow(c[0]-p[0],2)+Math.pow(c[1]-p[1],2))/Math.sqrt(Math.pow(u[0]-f[0],2)+Math.pow(u[1]-f[1],2));m[d][i]||(m[d][i]={}),m[d][s]||(m[d][s]={}),m[d][i][a]=h,m[d][s][a]=h}}t()})})).catch(function(t){throw t})})).then(function(){var o={};t.map(function(i){o[i]={},e.strict_status==l.STATUS_STRICT&&(o.bakw={}),Object.keys(m[i]).map(function(n){o[i][n]=Object.keys(m[i][n]).reduce(function(t,e,r,o){return t+=m[i][n][e],r==o.length-1?t/o.length:t},0),e.strict_status==l.STATUS_STRICT&&(o.bakw[n]=1/o[i][n])}),o[i].cent=[0,1,2,3].reduce(function(t,e){var r="bbox"+e;return t+=o[i][r],3==e?t/4:t},0),e.strict_status==l.STATUS_STRICT&&(o.bakw.cent=1/o[i].cent)}),e.pointsWeightBuffer=o}).catch(function(t){throw t})},l});